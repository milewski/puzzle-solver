use bitcoin::hashes::Hash;
use criterion::{Criterion, criterion_group, criterion_main};

use puzzle_solver::sha256::do_sha256;

fn my_benchmark_function(c: &mut Criterion) {
    c.bench_function("sha256", |b| {
        b.iter(|| {
            do_sha256(&[
                0x02,
                0xc9, 0x49, 0x57, 0xfe, 0xef, 0xc3, 0xc4, 0x15, 0xef, 0xc3, 0x71, 0x71, 0x83, 0x36, 0x68, 0xa9,
                0xfe, 0xb3, 0x94, 0xa3, 0x09, 0x74, 0x01, 0xc0, 0x10, 0xc0, 0xed, 0x8b, 0xcd, 0x98, 0xaa, 0xb5
            ]);

            // bitcoin::hashes::sha256::Hash::hash(&[
            //     0x02,
            //     0xc9, 0x49, 0x57, 0xfe, 0xef, 0xc3, 0xc4, 0x15, 0xef, 0xc3, 0x71, 0x71, 0x83, 0x36, 0x68, 0xa9,
            //     0xfe, 0xb3, 0x94, 0xa3, 0x09, 0x74, 0x01, 0xc0, 0x10, 0xc0, 0xed, 0x8b, 0xcd, 0x98, 0xaa, 0xb5
            // ]);
        });
    });
}

// fn from_library(c: &mut Criterion) {
//     c.bench_function("bitcoin_sha256", |b| {
//         b.iter(|| {
//             bitcoin::hashes::sha256::Hash::hash(&[
//                 0x02,
//                 0xc9, 0x49, 0x57, 0xfe, 0xef, 0xc3, 0xc4, 0x15, 0xef, 0xc3, 0x71, 0x71, 0x83, 0x36, 0x68, 0xa9,
//                 0xfe, 0xb3, 0x94, 0xa3, 0x09, 0x74, 0x01, 0xc0, 0x10, 0xc0, 0xed, 0x8b, 0xcd, 0x98, 0xaa, 0xb5
//             ]);
//         });
//     });
// }


criterion_group!(benches, my_benchmark_function);
criterion_main!(benches);